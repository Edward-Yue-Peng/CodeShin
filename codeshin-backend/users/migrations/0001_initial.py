# Generated by Django 5.1.3 on 2025-04-06 13:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("is_premium", models.BooleanField()),
                ("difficulty", models.CharField(max_length=50)),
                ("acceptance_rate", models.FloatField(blank=True, null=True)),
                ("frequency", models.FloatField(blank=True, null=True)),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                ("discuss_count", models.IntegerField(blank=True, null=True)),
                ("accepted", models.BigIntegerField(blank=True, null=True)),
                ("submissions", models.BigIntegerField(blank=True, null=True)),
                ("likes", models.IntegerField(blank=True, null=True)),
                ("dislikes", models.IntegerField(blank=True, null=True)),
                ("rating", models.FloatField(blank=True, null=True)),
                ("similar_questions", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Problem",
                "verbose_name_plural": "Problems",
                "db_table": "problems",
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Topic",
                "verbose_name_plural": "Topics",
                "db_table": "topics",
            },
        ),
        migrations.CreateModel(
            name="ConversationSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_resolved", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.problem"
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation Session",
                "verbose_name_plural": "Conversation Sessions",
                "db_table": "conversation_sessions",
            },
        ),
        migrations.CreateModel(
            name="GptConversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("conversation_type", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to="users.conversationsession",
                    ),
                ),
            ],
            options={
                "verbose_name": "GPT Conversation",
                "verbose_name_plural": "GPT Conversations",
                "db_table": "gpt_conversations",
                "ordering": ["timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AutosaveCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("autosave_code", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.problem"
                    ),
                ),
            ],
            options={
                "verbose_name": "Autosave Code",
                "verbose_name_plural": "Autosave Codes",
                "db_table": "autosave_codes",
            },
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recommended_problems", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Recommendation",
                "verbose_name_plural": "Recommendations",
                "db_table": "recommendations",
            },
        ),
        migrations.AddField(
            model_name="problem",
            name="related_topics",
            field=models.ManyToManyField(related_name="problems", to="users.topic"),
        ),
        migrations.CreateModel(
            name="UserAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attribute_name", models.CharField(max_length=255)),
                ("attribute_value", models.FloatField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Attribute",
                "verbose_name_plural": "User Attributes",
                "db_table": "user_attributes",
            },
        ),
        migrations.CreateModel(
            name="UserHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("solution_code", models.TextField()),
                ("version", models.IntegerField(default=1)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_passed", models.BooleanField(default=False)),
                (
                    "submission_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.problem"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User History",
                "verbose_name_plural": "User Histories",
                "db_table": "user_history",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="UserTopicMastery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("topic_name", models.CharField(max_length=255)),
                ("mastery_level", models.FloatField(default=-1.0)),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Topic Mastery",
                "verbose_name_plural": "User Topic Masteries",
                "db_table": "user_topic_mastery",
            },
        ),
    ]
